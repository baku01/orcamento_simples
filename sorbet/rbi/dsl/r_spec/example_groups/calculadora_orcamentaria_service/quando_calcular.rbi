# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `RSpec::ExampleGroups::CalculadoraOrcamentariaService::QuandoCalcular`.
# Please instead update this file by running `bin/tapioca dsl RSpec::ExampleGroups::CalculadoraOrcamentariaService::QuandoCalcular`.


class RSpec::ExampleGroups::CalculadoraOrcamentariaService::QuandoCalcular < RSpec::ExampleGroups::CalculadoraOrcamentariaService
  include ::RSpec::ExampleGroups::CalculadoraOrcamentariaService::QuandoCalcular::LetDefinitions

  class << self
    sig do
      params(
        args: T.untyped,
        block: T.proc.bind(RSpec::ExampleGroups::CalculadoraOrcamentariaService::QuandoCalcular).void
      ).returns(T.untyped)
    end
    def after(*args, &block); end

    sig do
      params(
        args: T.untyped,
        block: T.proc.bind(RSpec::ExampleGroups::CalculadoraOrcamentariaService::QuandoCalcular).void
      ).returns(T.untyped)
    end
    def before(*args, &block); end

    sig do
      params(
        all_args: T.untyped,
        block: T.proc.bind(RSpec::ExampleGroups::CalculadoraOrcamentariaService::QuandoCalcular).void
      ).returns(T.untyped)
    end
    def it(*all_args, &block); end

    sig do
      params(
        name: T.untyped,
        block: T.proc.bind(RSpec::ExampleGroups::CalculadoraOrcamentariaService::QuandoCalcular).void
      ).returns(T.untyped)
    end
    def let(*name, &block); end

    sig do
      params(
        name: T.untyped,
        block: T.proc.bind(RSpec::ExampleGroups::CalculadoraOrcamentariaService::QuandoCalcular).void
      ).returns(T.untyped)
    end
    def let!(*name, &block); end

    sig do
      params(
        all_args: T.untyped,
        block: T.proc.bind(RSpec::ExampleGroups::CalculadoraOrcamentariaService::QuandoCalcular).void
      ).returns(T.untyped)
    end
    def specify(*all_args, &block); end

    sig do
      params(
        block: T.proc.bind(RSpec::ExampleGroups::CalculadoraOrcamentariaService::QuandoCalcular).void
      ).returns(T.untyped)
    end
    def subject(&block); end
  end
end

module RSpec::ExampleGroups::CalculadoraOrcamentariaService::QuandoCalcular::LetDefinitions
  sig { returns(T.untyped) }
  def resultado_eqp; end

  sig { returns(T.untyped) }
  def resultado_mo; end

  sig { returns(T.untyped) }
  def valor_esperado_eqp; end

  sig { returns(T.untyped) }
  def valor_esperado_mo; end
end
