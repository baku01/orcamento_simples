# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `RSpec::Rails::RequestExampleGroup`.
# Please instead update this file by running `bin/tapioca dsl RSpec::Rails::RequestExampleGroup`.


module RSpec::Rails::RequestExampleGroup
  include GeneratedInstanceMethods

  mixes_in_class_methods ::RSpec::Rails::SetupAndTeardownAdapter::ClassMethods
  mixes_in_class_methods ::RSpec::Rails::MinitestAssertionAdapter::ClassMethods
  mixes_in_class_methods ::ActiveRecord::TestFixtures::ClassMethods
  mixes_in_class_methods ::ActionDispatch::Assertions::RoutingAssertions::ClassMethods
  mixes_in_class_methods ::ActionDispatch::IntegrationTest::Behavior::ClassMethods
  mixes_in_class_methods GeneratedClassMethods

  module GeneratedClassMethods
    def fixture_class_names; end
    def fixture_class_names=(value); end
    def fixture_class_names?; end
    def fixture_paths; end
    def fixture_paths=(value); end
    def fixture_paths?; end
    def fixture_sets; end
    def fixture_sets=(value); end
    def fixture_sets?; end
    def fixture_table_names; end
    def fixture_table_names=(value); end
    def fixture_table_names?; end
    def lock_threads; end
    def lock_threads=(value); end
    def lock_threads?; end
    def pre_loaded_fixtures; end
    def pre_loaded_fixtures=(value); end
    def pre_loaded_fixtures?; end
    def use_instantiated_fixtures; end
    def use_instantiated_fixtures=(value); end
    def use_instantiated_fixtures?; end
    def use_transactional_tests; end
    def use_transactional_tests=(value); end
    def use_transactional_tests?; end
  end

  module GeneratedInstanceMethods
    def fixture_class_names; end
    def fixture_class_names=(value); end
    def fixture_class_names?; end
    def fixture_paths; end
    def fixture_paths?; end
    def fixture_sets; end
    def fixture_sets=(value); end
    def fixture_sets?; end
    def fixture_table_names; end
    def fixture_table_names=(value); end
    def fixture_table_names?; end
    def lock_threads; end
    def lock_threads=(value); end
    def lock_threads?; end
    def pre_loaded_fixtures; end
    def pre_loaded_fixtures=(value); end
    def pre_loaded_fixtures?; end
    def use_instantiated_fixtures; end
    def use_instantiated_fixtures=(value); end
    def use_instantiated_fixtures?; end
    def use_transactional_tests; end
    def use_transactional_tests=(value); end
    def use_transactional_tests?; end
  end
end
